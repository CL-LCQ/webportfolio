{"ast":null,"code":"var _jsxFileName = \"/Users/charlesleclercq/Documents/Github/portfolio-react/portfolio-react/src/components/MediaDisplay/MediaDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport './MediaDisplay.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DisplayMedia = ({\n  url\n}) => {\n  _s();\n  const mediaContainerRef = useRef(null);\n  useEffect(() => {\n    if (!url) {\n      console.error(\"URL or container ID is missing.\");\n      return;\n    }\n    const projectVideoContainer = mediaContainerRef.current;\n\n    // Clear the previous content and reset styles\n    projectVideoContainer.classList.remove('loaded');\n    projectVideoContainer.innerHTML = '';\n    if (url.includes('youtube.com') || url.includes('youtu.be')) {\n      const youtubeId = extractYouTubeId(url);\n      if (youtubeId) {\n        const iframeElement = document.createElement('iframe');\n        iframeElement.width = '100%';\n        iframeElement.height = '100%';\n        iframeElement.src = `https://www.youtube.com/embed/${youtubeId}?autoplay=1&loop=1&mute=1&controls=0&modestbranding=1&rel=0&iv_load_policy=3&showinfo=0&fs=0&disablekb=1`;\n        iframeElement.setAttribute('allowfullscreen', 'true');\n        iframeElement.setAttribute('frameborder', '0');\n        iframeElement.setAttribute('allow', 'autoplay; encrypted-media;');\n        projectVideoContainer.appendChild(iframeElement);\n      }\n    } else if (url.endsWith('.mp4') || url.endsWith('.webm')) {\n      const videoElement = document.createElement('video');\n      videoElement.setAttribute('autoplay', 'true');\n      videoElement.setAttribute('loop', 'true');\n      videoElement.setAttribute('muted', 'true');\n      videoElement.setAttribute('controls', 'true');\n      videoElement.muted = true;\n      videoElement.onloadedmetadata = function () {\n        if (videoElement.videoHeight > videoElement.videoWidth) {\n          // Portrait video\n          videoElement.style.height = `${videoElement.videoHeight / 2}px`;\n          videoElement.style.width = '100%';\n        } else {\n          // Landscape or square video\n          videoElement.style.height = '100%';\n          videoElement.style.width = '100%';\n        }\n      };\n      videoElement.src = url;\n      projectVideoContainer.appendChild(videoElement);\n    } else {\n      const imageElement = document.createElement('img');\n      imageElement.src = url;\n      imageElement.style.width = '100%';\n      imageElement.style.height = 'auto';\n      imageElement.style.objectFit = 'cover';\n      projectVideoContainer.appendChild(imageElement);\n    }\n\n    // Set the container as loaded once content is appended\n    projectVideoContainer.classList.add('loaded');\n  }, [url]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mediaContainerRef,\n    className: \"media-container loaded\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n// Function to extract YouTube video ID from a URL\n_s(DisplayMedia, \"/aj/fp7dzcujjEHyLhHM9kRBRvE=\");\n_c = DisplayMedia;\nfunction extractYouTubeId(url) {\n  const regex = /(?:youtube\\.com\\/(?:[^\\/]+\\/[^\\/]+\\/|(?:v|e(?:mbed)?)\\/|.*[?&]v=)|youtu\\.be\\/)([^\"&?\\/\\s]{11})/;\n  const match = url.match(regex);\n  return match ? match[1] : null;\n}\nexport default DisplayMedia;\nvar _c;\n$RefreshReg$(_c, \"DisplayMedia\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","DisplayMedia","url","_s","mediaContainerRef","console","error","projectVideoContainer","current","classList","remove","innerHTML","includes","youtubeId","extractYouTubeId","iframeElement","document","createElement","width","height","src","setAttribute","appendChild","endsWith","videoElement","muted","onloadedmetadata","videoHeight","videoWidth","style","imageElement","objectFit","add","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","regex","match","$RefreshReg$"],"sources":["/Users/charlesleclercq/Documents/Github/portfolio-react/portfolio-react/src/components/MediaDisplay/MediaDisplay.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport './MediaDisplay.css';\n\n\nconst DisplayMedia = ({ url }) => {\n\n  const mediaContainerRef = useRef(null);\n\n  useEffect(() => {\n    if (!url) {\n      console.error(\"URL or container ID is missing.\");\n      return;\n    }\n\n    const projectVideoContainer = mediaContainerRef.current;\n\n    // Clear the previous content and reset styles\n    projectVideoContainer.classList.remove('loaded');\n    projectVideoContainer.innerHTML = ''; \n\n    if (url.includes('youtube.com') || url.includes('youtu.be')) {\n      const youtubeId = extractYouTubeId(url);\n      if (youtubeId) {\n        const iframeElement = document.createElement('iframe');\n        iframeElement.width = '100%';\n        iframeElement.height = '100%';\n        iframeElement.src = `https://www.youtube.com/embed/${youtubeId}?autoplay=1&loop=1&mute=1&controls=0&modestbranding=1&rel=0&iv_load_policy=3&showinfo=0&fs=0&disablekb=1`;\n        iframeElement.setAttribute('allowfullscreen', 'true');\n        iframeElement.setAttribute('frameborder', '0');\n        iframeElement.setAttribute('allow', 'autoplay; encrypted-media;');\n        projectVideoContainer.appendChild(iframeElement);\n      }\n    } else if (url.endsWith('.mp4') || url.endsWith('.webm')) {\n      const videoElement = document.createElement('video');\n      videoElement.setAttribute('autoplay', 'true');\n      videoElement.setAttribute('loop', 'true');\n      videoElement.setAttribute('muted', 'true');\n      videoElement.setAttribute('controls', 'true');\n      videoElement.muted = true;\n\n      videoElement.onloadedmetadata = function() {\n        if (videoElement.videoHeight > videoElement.videoWidth) {\n          // Portrait video\n          videoElement.style.height = `${videoElement.videoHeight / 2}px`;\n          videoElement.style.width = '100%';\n        } else {\n          // Landscape or square video\n          videoElement.style.height = '100%';\n          videoElement.style.width = '100%';\n        }\n      };\n\n      videoElement.src = url;\n      projectVideoContainer.appendChild(videoElement);\n    } else {\n      const imageElement = document.createElement('img');\n      imageElement.src = url;\n\n\n        imageElement.style.width = '100%';\n        imageElement.style.height = 'auto';\n        imageElement.style.objectFit = 'cover';\n      \n\n      projectVideoContainer.appendChild(imageElement);\n    }\n\n    // Set the container as loaded once content is appended\n    projectVideoContainer.classList.add('loaded');\n\n  }, [url]);\n\n  return (\n    <div \n      ref={mediaContainerRef} \n      className=\"media-container loaded\"\n    />\n  );\n};\n\n// Function to extract YouTube video ID from a URL\nfunction extractYouTubeId(url) {\n  const regex = /(?:youtube\\.com\\/(?:[^\\/]+\\/[^\\/]+\\/|(?:v|e(?:mbed)?)\\/|.*[?&]v=)|youtu\\.be\\/)([^\"&?\\/\\s]{11})/;\n  const match = url.match(regex);\n  return match ? match[1] : null;\n}\n\n\n\nexport default DisplayMedia;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
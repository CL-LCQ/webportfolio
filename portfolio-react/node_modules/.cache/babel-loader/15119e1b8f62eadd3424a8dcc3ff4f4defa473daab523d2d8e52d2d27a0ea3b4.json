{"ast":null,"code":"var _jsxFileName = \"/Users/charlesleclercq/Documents/Github/portfolio-react/portfolio-react/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { supabaseClient } from './supabaseClient';\nimport Card from './components/Card/Card';\nimport HeaderContent from './components/Header/Header'; // Import the component\nimport './App.css';\nimport Page from './components/Page/Page';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(true); // New state for loading\n\n  // Fetch projects from Supabase\n  useEffect(() => {\n    const fetchProjects = async () => {\n      const {\n        data,\n        error\n      } = await supabaseClient.from('work_v2').select('id, tag, title, description, imageURL, order, date');\n      if (error) {\n        console.error('Error fetching projects:', error);\n        setLoading(false); // Stop loading on error\n        return;\n      }\n\n      // Filter and sort projects\n      const filteredData = data.filter(project => project.enabled !== false);\n      const sortedData = filteredData.sort((a, b) => a.order - b.order);\n      setProjects(sortedData);\n      setLoading(false); // Stop loading once data is fetched\n    };\n    fetchProjects();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(HeaderContent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"app-main\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-grid\",\n        children: projects.map((project, index) => /*#__PURE__*/_jsxDEV(Card, {\n          year: project.date,\n          tag: project.tag,\n          title: project.title,\n          description: project.description,\n          imageURL: project.imageURL,\n          caseStudyLink: `/case-study/${project.id}`,\n          learnMoreLink: `/learn-more/${project.id}`,\n          delay: 300 * (1 - Math.exp(-index / 5)),\n          onClick: () => setSelectedCard(item)\n        }, project.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OQ1VoVBkBYQ0DtEeE9la9LZgEb0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","supabaseClient","Card","HeaderContent","Page","jsxDEV","_jsxDEV","App","_s","projects","setProjects","loading","setLoading","fetchProjects","data","error","from","select","console","filteredData","filter","project","enabled","sortedData","sort","a","b","order","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","year","date","tag","title","description","imageURL","caseStudyLink","id","learnMoreLink","delay","Math","exp","onClick","setSelectedCard","item","_c","$RefreshReg$"],"sources":["/Users/charlesleclercq/Documents/Github/portfolio-react/portfolio-react/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { supabaseClient } from './supabaseClient';\nimport Card from './components/Card/Card';\nimport HeaderContent from './components/Header/Header'; // Import the component\nimport './App.css';\nimport Page from './components/Page/Page';\n\nfunction App() {\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(true); // New state for loading\n\n  // Fetch projects from Supabase\n  useEffect(() => {\n    const fetchProjects = async () => {\n      const { data, error } = await supabaseClient\n        .from('work_v2')\n        .select('id, tag, title, description, imageURL, order, date');\n\n      if (error) {\n        console.error('Error fetching projects:', error);\n        setLoading(false); // Stop loading on error\n        return;\n      }\n\n      // Filter and sort projects\n      const filteredData = data.filter((project) => project.enabled !== false);\n      const sortedData = filteredData.sort((a, b) => a.order - b.order);\n      setProjects(sortedData);\n      setLoading(false); // Stop loading once data is fetched\n    };\n\n    fetchProjects();\n  }, []);\n\n  return (\n    <div className=\"app-container\">\n      <header className=\"app-header\">\n        <HeaderContent /> {/* Inject the component */}\n    \n      </header>\n      <main className=\"app-main\">\n        <div className=\"project-grid\">\n          {projects.map((project, index) => (\n            <Card\n              key={project.id}\n              year={project.date}\n              tag={project.tag}\n              title={project.title}\n              description={project.description}\n              imageURL={project.imageURL}\n              caseStudyLink={`/case-study/${project.id}`}\n              learnMoreLink={`/learn-more/${project.id}`}\n              delay={300 * (1 - Math.exp(-index / 5))}\n              onClick={() => setSelectedCard(item)} \n            />\n          ))}\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/charlesleclercq/Documents/Github/portfolio-react/portfolio-react/src/App.js\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { supabaseClient } from './supabaseClient';\nimport Card from './components/Card/Card';\nimport HeaderContent from './components/Header/Header'; // Import the component\nimport './App.css';\nimport Page from './components/Page/Page';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(true); // New state for loading\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [isBackgroundActive, setIsBackgroundActive] = useState(false);\n  const toggleClass = () => {\n    setIsBackgroundActive(prevState => !prevState);\n  };\n\n  // Fetch projects from Supabase\n  _s(useEffect(_s(() => {\n    _s();\n    const fetchProjects = async () => {\n      const {\n        data,\n        error\n      } = await supabaseClient.from('work_v2').select('*');\n      // .select('id, tag, title, description, imageURL, order, date');\n\n      if (error) {\n        console.error('Error fetching projects:', error);\n        setLoading(false); // Stop loading on error\n        return;\n      }\n\n      // Filter and sort projects\n      const filteredData = data.filter(project => project.enabled !== false);\n      const sortedData = filteredData.sort((a, b) => a.order - b.order);\n      setProjects(sortedData);\n      setLoading(false); // Stop loading once data is fetched\n    };\n    fetchProjects();\n\n    // Apply the class to <body> or <html> whenever isBackgroundActive changes\n    useEffect(() => {\n      if (isBackgroundActive) {\n        document.body.classList.add('background');\n        document.documentElement.classList.add('background');\n      } else {\n        document.body.classList.remove('background');\n        document.documentElement.classList.remove('background');\n      }\n    }, [isBackgroundActive]); // Run every time isBackgroundActive change\n  }, \"OD7bBpZva5O2jO+Puf00hKivP7c=\"), []), \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app-container ${isBackgroundActive ? 'background' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(HeaderContent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: `app-main ${isBackgroundActive ? 'background' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"overlay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-grid\",\n        children: projects.map((project, index) => /*#__PURE__*/_jsxDEV(Card, {\n          project: project,\n          delay: 300 * (1 - Math.exp(-index / 5)),\n          onClick: () => {\n            console.log(\"clicked: \" + project.title);\n            setSelectedCard(project);\n            toggleClass();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), selectedCard && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-container\",\n        children: /*#__PURE__*/_jsxDEV(Page, {\n          project: selectedCard,\n          onClose: () => {\n            setSelectedCard(null);\n            toggleClass();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"JBrueyPVQmvOFKuMNLqiri0KHR0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","supabaseClient","Card","HeaderContent","Page","jsxDEV","_jsxDEV","App","_s2","_s","$RefreshSig$","projects","setProjects","loading","setLoading","selectedCard","setSelectedCard","isBackgroundActive","setIsBackgroundActive","toggleClass","prevState","fetchProjects","data","error","from","select","console","filteredData","filter","project","enabled","sortedData","sort","a","b","order","document","body","classList","add","documentElement","remove","className","children","fileName","_jsxFileName","lineNumber","columnNumber","class","map","index","delay","Math","exp","onClick","log","title","onClose","_c","$RefreshReg$"],"sources":["/Users/charlesleclercq/Documents/Github/portfolio-react/portfolio-react/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { supabaseClient } from './supabaseClient';\nimport Card from './components/Card/Card';\nimport HeaderContent from './components/Header/Header'; // Import the component\nimport './App.css';\nimport Page from './components/Page/Page';\n\nfunction App() {\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(true); // New state for loading\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [isBackgroundActive, setIsBackgroundActive] = useState(false);\n\n\n  const toggleClass = () => {\n    setIsBackgroundActive(prevState => !prevState);\n  };\n\n  // Fetch projects from Supabase\n  useEffect(() => {\n    const fetchProjects = async () => {\n      const { data, error } = await supabaseClient\n        .from('work_v2')\n        .select('*');\n        // .select('id, tag, title, description, imageURL, order, date');\n\n      if (error) {\n        console.error('Error fetching projects:', error);\n        setLoading(false); // Stop loading on error\n        return;\n      }\n\n      // Filter and sort projects\n      const filteredData = data.filter((project) => project.enabled !== false);\n      const sortedData = filteredData.sort((a, b) => a.order - b.order);\n      setProjects(sortedData);\n      setLoading(false); // Stop loading once data is fetched\n    };\n\n    fetchProjects();\n\n\n // Apply the class to <body> or <html> whenever isBackgroundActive changes\n useEffect(() => {\n  if (isBackgroundActive) {\n    document.body.classList.add('background');\n    document.documentElement.classList.add('background');\n  } else {\n    document.body.classList.remove('background');\n    document.documentElement.classList.remove('background');\n  }\n}, [isBackgroundActive]); // Run every time isBackgroundActive change\n\n  }, []);\n\n  return (\n    <div className={`app-container ${isBackgroundActive ? 'background' : ''}`}>\n      <header className=\"app-header\">\n        <HeaderContent /> {/* Inject the component */}\n    \n      </header>\n      <main className={`app-main ${isBackgroundActive ? 'background' : ''}`}>\n      <div class=\"overlay\"></div> \n        <div className=\"project-grid\">\n          {projects.map((project, index) => (\n            <Card\n              project={project}\n              delay={300 * (1 - Math.exp(-index / 5))}\n              onClick={() => {\n                console.log(\"clicked: \"+project.title);\n                setSelectedCard(project);\n                toggleClass();\n              }\n              }\n            />\n          ))}\n        </div>\n        {/* Only render the page-container when a card is clicked */}\n        {selectedCard && (\n          <div className=\"page-container\">\n            <Page \n              project={selectedCard} \n              onClose={() => {\n                setSelectedCard(null);\n                toggleClass(); \n              }\n\n            }\n            />\n          </div>\n        )}\n        \n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
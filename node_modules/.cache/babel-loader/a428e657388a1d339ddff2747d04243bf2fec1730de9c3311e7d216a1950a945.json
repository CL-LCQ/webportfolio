{"ast":null,"code":"import React from'react';import'./LinkList.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DisplayLinks=_ref=>{let{props}=_ref;const links=props!==null&&props!==void 0?props:'';if(!links){console.error(\"links is undefined or null.\");return null;}if(Array.isArray(links)){return/*#__PURE__*/_jsx(\"span\",{className:\"link-container\",children:links.map((linkItem,index)=>/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(\"a\",{href:linkItem.link,target:\"_blank\",rel:\"noopener noreferrer\",children:linkItem.title}),index<links.length-1&&', ']},index))});}if(typeof links==='string'){return/*#__PURE__*/_jsx(\"span\",{className:\"link-container\",children:links});}console.error(\"Invalid data format for links. Expected an array or string, but received:\",links);return null;};DisplayLinks.defaultProps={links:'empty'};export default DisplayLinks;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","DisplayLinks","_ref","props","links","console","error","Array","isArray","className","children","map","linkItem","index","Fragment","href","link","target","rel","title","length","defaultProps"],"sources":["/Users/charlesleclercq/Documents/Github/webportfolio/portfolio-react/src/components/LinkList/LinkList.js"],"sourcesContent":["import React from 'react';\nimport './LinkList.css';\nimport PropTypes from 'prop-types';\n\nconst DisplayLinks = ({ props }) => {\n\n  const links = props?? '';  \n\n  if (!links) {\n    console.error(\"links is undefined or null.\");\n    return null;\n  }\n\n  if (Array.isArray(links)) {\n    return (\n      <span className=\"link-container\">\n        {links.map((linkItem, index) => (\n          <React.Fragment key={index}>\n            <a href={linkItem.link} target=\"_blank\" rel=\"noopener noreferrer\">\n              {linkItem.title}\n            </a>\n            {index < links.length - 1 && ', '}\n          </React.Fragment>\n        ))}\n      </span>\n    );\n  }\n\n  if (typeof links === 'string') {\n    return <span className=\"link-container\">{links}</span>;\n  }\n\n  console.error(\"Invalid data format for links. Expected an array or string, but received:\", links);\n  return null;\n};\n\nDisplayLinks.defaultProps = {\n  links: 'empty'\n};\n\nDisplayLinks.propTypes = {\n  links: PropTypes.oneOfType([\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        link: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired,\n      })\n    ),\n    PropTypes.string\n  ])\n};\n\nexport default DisplayLinks;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,gBAAgB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAGxB,KAAM,CAAAC,YAAY,CAAGC,IAAA,EAAe,IAAd,CAAEC,KAAM,CAAC,CAAAD,IAAA,CAE7B,KAAM,CAAAE,KAAK,CAAGD,KAAK,SAALA,KAAK,UAALA,KAAK,CAAG,EAAE,CAExB,GAAI,CAACC,KAAK,CAAE,CACVC,OAAO,CAACC,KAAK,CAAC,6BAA6B,CAAC,CAC5C,MAAO,KAAI,CACb,CAEA,GAAIC,KAAK,CAACC,OAAO,CAACJ,KAAK,CAAC,CAAE,CACxB,mBACEN,IAAA,SAAMW,SAAS,CAAC,gBAAgB,CAAAC,QAAA,CAC7BN,KAAK,CAACO,GAAG,CAAC,CAACC,QAAQ,CAAEC,KAAK,gBACzBb,KAAA,CAACJ,KAAK,CAACkB,QAAQ,EAAAJ,QAAA,eACbZ,IAAA,MAAGiB,IAAI,CAAEH,QAAQ,CAACI,IAAK,CAACC,MAAM,CAAC,QAAQ,CAACC,GAAG,CAAC,qBAAqB,CAAAR,QAAA,CAC9DE,QAAQ,CAACO,KAAK,CACd,CAAC,CACHN,KAAK,CAAGT,KAAK,CAACgB,MAAM,CAAG,CAAC,EAAI,IAAI,GAJdP,KAKL,CACjB,CAAC,CACE,CAAC,CAEX,CAEA,GAAI,MAAO,CAAAT,KAAK,GAAK,QAAQ,CAAE,CAC7B,mBAAON,IAAA,SAAMW,SAAS,CAAC,gBAAgB,CAAAC,QAAA,CAAEN,KAAK,CAAO,CAAC,CACxD,CAEAC,OAAO,CAACC,KAAK,CAAC,2EAA2E,CAAEF,KAAK,CAAC,CACjG,MAAO,KAAI,CACb,CAAC,CAEDH,YAAY,CAACoB,YAAY,CAAG,CAC1BjB,KAAK,CAAE,OACT,CAAC,CAcD,cAAe,CAAAH,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
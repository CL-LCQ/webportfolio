{"ast":null,"code":"var _jsxFileName = \"/Users/charlesleclercq/Documents/Github/webportfolio/src/components/Homepage/Homepage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport Card from '../Card/Card';\nimport Page from '../Page/Page';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = ({\n  projects,\n  loading\n}) => {\n  _s();\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [isBackgroundActive, setIsBackgroundActive] = useState(false);\n  const navigate = useNavigate();\n  const {\n    projectId\n  } = useParams();\n\n  // When the user visits /project/:id directly, pre-select the card\n  useEffect(() => {\n    if (projectId && projects.length > 0) {\n      const project = projects.find(p => p.id === parseInt(projectId));\n      if (project) {\n        setSelectedCard(project);\n        setIsBackgroundActive(true);\n      }\n    }\n  }, [projectId, projects]);\n\n  // Toggles the background class when a card is clicked\n  const toggleClass = () => {\n    setIsBackgroundActive(prevState => !prevState);\n  };\n\n  // Adds or removes a class from the <body> and <html> tags for the background effect\n  useEffect(() => {\n    if (isBackgroundActive) {\n      document.body.classList.add('background');\n      document.documentElement.classList.add('background');\n    } else {\n      document.body.classList.remove('background');\n      document.documentElement.classList.remove('background');\n    }\n  }, [isBackgroundActive]);\n\n  // If still loading, show a loading indicator\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-indicator\",\n      children: \"Loading projects...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If no projects are available, display a message\n  if (!projects.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-projects\",\n      children: \"No projects available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `overlay ${isBackgroundActive ? 'background' : ''}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-title\",\n      children: \"Selected Works\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-grid\",\n      children: projects.map((project, index) => /*#__PURE__*/_jsxDEV(Card, {\n        project: project,\n        delay: 300 * (1 - Math.exp(-index / 5)),\n        onClick: () => {\n          console.log('Clicked project:', project);\n          setSelectedCard(project); // Set the selected project for the Page component\n          toggleClass(); // Activate the background change\n          navigate(`/project/${project.id}`); // Update the URL to /project/:id\n        }\n      }, project.id || index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), selectedCard && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-container\",\n      children: /*#__PURE__*/_jsxDEV(Page, {\n        project: selectedCard,\n        onClose: () => {\n          setSelectedCard(null); // Clear the selected card\n          toggleClass(); // Reset the background\n          navigate('/'); // Return to the home page\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"pR7hMZ6pnJjnNK2/osHq3O9cvj8=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","Card","Page","jsxDEV","_jsxDEV","HomePage","projects","loading","_s","selectedCard","setSelectedCard","isBackgroundActive","setIsBackgroundActive","navigate","projectId","length","project","find","p","id","parseInt","toggleClass","prevState","document","body","classList","add","documentElement","remove","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","delay","Math","exp","onClick","console","log","onClose","_c","$RefreshReg$"],"sources":["/Users/charlesleclercq/Documents/Github/webportfolio/src/components/Homepage/Homepage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport Card from '../Card/Card';\nimport Page from '../Page/Page';\n\nconst HomePage = ({ projects, loading }) => {\n  const [selectedCard, setSelectedCard] = useState(null); \n  const [isBackgroundActive, setIsBackgroundActive] = useState(false); \n  const navigate = useNavigate();\n  const { projectId } = useParams();\n\n  // When the user visits /project/:id directly, pre-select the card\n  useEffect(() => {\n    if (projectId && projects.length > 0) {\n      const project = projects.find((p) => p.id === parseInt(projectId));\n      if (project) {\n        setSelectedCard(project);\n        setIsBackgroundActive(true);\n      }\n    }\n  }, [projectId, projects]);\n\n  // Toggles the background class when a card is clicked\n  const toggleClass = () => {\n    setIsBackgroundActive((prevState) => !prevState);\n  };\n\n  // Adds or removes a class from the <body> and <html> tags for the background effect\n  useEffect(() => {\n    if (isBackgroundActive) {\n      document.body.classList.add('background');\n      document.documentElement.classList.add('background');\n    } else {\n      document.body.classList.remove('background');\n      document.documentElement.classList.remove('background');\n    }\n  }, [isBackgroundActive]); \n\n  // If still loading, show a loading indicator\n  if (loading) {\n    return <div className=\"loading-indicator\">Loading projects...</div>;\n  }\n\n  // If no projects are available, display a message\n  if (!projects.length) {\n    return <div className=\"no-projects\">No projects available.</div>;\n  }\n\n  return (\n    <div>\n      {/* Background overlay that appears when Page is open */}\n      <div className={`overlay ${isBackgroundActive ? 'background' : ''}`}></div>\n\n      <div className=\"header-title\">Selected Works</div>\n\n      {/* Project grid with interactive cards */}\n      <div className=\"project-grid\">\n        {projects.map((project, index) => (\n          <Card\n            key={project.id || index}\n            project={project}\n            delay={300 * (1 - Math.exp(-index / 5))}\n            onClick={() => {\n              console.log('Clicked project:', project);\n              setSelectedCard(project); // Set the selected project for the Page component\n              toggleClass(); // Activate the background change\n              navigate(`/project/${project.id}`); // Update the URL to /project/:id\n            }}\n          />\n        ))}\n      </div>\n\n      {/* Only render Page when a card has been selected */}\n      {selectedCard && (\n        <div className=\"page-container\">\n          <Page \n            project={selectedCard} \n            onClose={() => {\n              setSelectedCard(null); // Clear the selected card\n              toggleClass(); // Reset the background\n              navigate('/'); // Return to the home page\n            }}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/charlesleclercq/Documents/Github/portfolio-react/portfolio-react/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { supabaseClient } from './supabaseClient'; // Import Supabase client\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [currentMediaIndex, setCurrentMediaIndex] = useState(0); // Track current media index\n  const [defaultPreview, setDefaultPreview] = useState(''); // Store the default preview image\n\n  // Fetch data from Supabase\n  useEffect(() => {\n    const fetchProjects = async () => {\n      try {\n        // Fetch project data including the 'order' property\n        const {\n          data: projectsData,\n          error: projectsError\n        } = await supabaseClient.from('work').select('id, title, imageURL, url2, url3, enabled, order, role, projectdate,selection_title, company, industry, what, why, tech');\n        if (projectsError) {\n          console.error('Error fetching projects data:', projectsError);\n          return;\n        }\n\n        // Filter out disabled projects\n        const filteredData = projectsData.filter(project => project.enabled !== false);\n\n        // Sort projects by 'order'\n        const sortedData = filteredData.sort((a, b) => a.order - b.order);\n        setProjects(sortedData);\n\n        // Set the first project by default\n        if (sortedData.length > 0) {\n          setSelectedProject(sortedData[0]);\n          setCurrentMediaIndex(0); // Start with the first media\n        }\n\n        // Fetch a default preview image\n        const {\n          data: imagesData,\n          error: imagesError\n        } = await supabaseClient.from('work').select('imageURL').limit(1);\n        if (imagesError) {\n          console.error('Error fetching preview image:', imagesError);\n        } else if (imagesData.length > 0) {\n          setDefaultPreview(imagesData[0].imageURL); // Set the first image as the default preview\n        }\n      } catch (err) {\n        console.error('Unexpected error:', err);\n      }\n    };\n    fetchProjects();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Portfolio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-grid\",\n      children: projects.map(project => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: project.hero_image,\n          alt: project.title,\n          className: \"project-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: project.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, project.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"lbJabzcwMuLu2M/ywasgk8ndIKI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","supabaseClient","jsxDEV","_jsxDEV","App","_s","projects","setProjects","selectedProject","setSelectedProject","currentMediaIndex","setCurrentMediaIndex","defaultPreview","setDefaultPreview","fetchProjects","data","projectsData","error","projectsError","from","select","console","filteredData","filter","project","enabled","sortedData","sort","a","b","order","length","imagesData","imagesError","limit","imageURL","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","src","hero_image","alt","title","id","_c","$RefreshReg$"],"sources":["/Users/charlesleclercq/Documents/Github/portfolio-react/portfolio-react/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { supabaseClient } from './supabaseClient';  // Import Supabase client\n\nfunction App() {\n  const [projects, setProjects] = useState([]);\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [currentMediaIndex, setCurrentMediaIndex] = useState(0);  // Track current media index\n  const [defaultPreview, setDefaultPreview] = useState('');  // Store the default preview image\n\n\n  // Fetch data from Supabase\n  useEffect(() => {\n    const fetchProjects = async () => {\n      try {\n        // Fetch project data including the 'order' property\n      const { data: projectsData, error: projectsError } = await supabaseClient\n        .from('work')\n        .select('id, title, imageURL, url2, url3, enabled, order, role, projectdate,selection_title, company, industry, what, why, tech');\n\n\n        if (projectsError) {\n          console.error('Error fetching projects data:', projectsError);\n          return;\n        }\n\n        // Filter out disabled projects\n        const filteredData = projectsData.filter(project => project.enabled !== false);\n\n        // Sort projects by 'order'\n        const sortedData = filteredData.sort((a, b) => a.order - b.order);\n        setProjects(sortedData);\n\n        // Set the first project by default\n        if (sortedData.length > 0) {\n          setSelectedProject(sortedData[0]);\n          setCurrentMediaIndex(0);  // Start with the first media\n        }\n\n        // Fetch a default preview image\n        const { data: imagesData, error: imagesError } = await supabaseClient\n          .from('work')\n          .select('imageURL')\n          .limit(1);\n\n        if (imagesError) {\n          console.error('Error fetching preview image:', imagesError);\n        } else if (imagesData.length > 0) {\n          setDefaultPreview(imagesData[0].imageURL);  // Set the first image as the default preview\n        }\n\n      } catch (err) {\n        console.error('Unexpected error:', err);\n      }\n    };\n\n    fetchProjects();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>My Portfolio</h1>\n      <div className=\"project-grid\">\n        {projects.map((project) => (\n          <div key={project.id} className=\"project-card\">\n            <img\n              src={project.hero_image}\n              alt={project.title}\n              className=\"project-image\"\n            />\n            <h2>{project.title}</h2>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
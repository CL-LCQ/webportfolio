{"ast":null,"code":"var _jsxFileName = \"/Users/charlesleclercq/Documents/Github/portfolio-react/portfolio-react/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { supabaseClient } from './supabaseClient';\nimport Card from './components/Card/Card';\nimport HeaderContent from './components/Header/Header'; // Import the component\nimport './App.css';\nimport Page from './components/Page/Page';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(true); // New state for loading\n  const [selectedCard, setSelectedCard] = useState(null);\n\n  // Fetch projects from Supabase\n  useEffect(() => {\n    const fetchProjects = async () => {\n      const {\n        data,\n        error\n      } = await supabaseClient.from('work_v2').select('id, tag, title, description, imageURL, order, date');\n      if (error) {\n        console.error('Error fetching projects:', error);\n        setLoading(false); // Stop loading on error\n        return;\n      }\n\n      // Filter and sort projects\n      const filteredData = data.filter(project => project.enabled !== false);\n      const sortedData = filteredData.sort((a, b) => a.order - b.order);\n      setProjects(sortedData);\n      setLoading(false); // Stop loading once data is fetched\n    };\n    fetchProjects();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(HeaderContent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"app-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-grid\",\n        children: projects.map((project, index) => /*#__PURE__*/_jsxDEV(Card, {\n          year: project.date,\n          tag: project.tag,\n          title: project.title,\n          description: project.description,\n          imageURL: project.imageURL,\n          caseStudyLink: `/case-study/${project.id}`,\n          learnMoreLink: `/learn-more/${project.id}`,\n          delay: 300 * (1 - Math.exp(-index / 5)),\n          onClick: () => {\n            console.log(\"clicked: \" + project);\n            setSelectedCard(project);\n          }\n        }, project.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), selectedCard && /*#__PURE__*/_jsxDEV(Page, {\n        project: selectedCard,\n        onClose: () => setSelectedCard(null) // Close the page by setting selectedCard to null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"F987yS/G1dhJLtLHN7oqrK6qjtw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","supabaseClient","Card","HeaderContent","Page","jsxDEV","_jsxDEV","App","_s","projects","setProjects","loading","setLoading","selectedCard","setSelectedCard","fetchProjects","data","error","from","select","console","filteredData","filter","project","enabled","sortedData","sort","a","b","order","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","year","date","tag","title","description","imageURL","caseStudyLink","id","learnMoreLink","delay","Math","exp","onClick","log","onClose","_c","$RefreshReg$"],"sources":["/Users/charlesleclercq/Documents/Github/portfolio-react/portfolio-react/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { supabaseClient } from './supabaseClient';\nimport Card from './components/Card/Card';\nimport HeaderContent from './components/Header/Header'; // Import the component\nimport './App.css';\nimport Page from './components/Page/Page';\n\nfunction App() {\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(true); // New state for loading\n  const [selectedCard, setSelectedCard] = useState(null);\n\n  // Fetch projects from Supabase\n  useEffect(() => {\n    const fetchProjects = async () => {\n      const { data, error } = await supabaseClient\n        .from('work_v2')\n        .select('id, tag, title, description, imageURL, order, date');\n\n      if (error) {\n        console.error('Error fetching projects:', error);\n        setLoading(false); // Stop loading on error\n        return;\n      }\n\n      // Filter and sort projects\n      const filteredData = data.filter((project) => project.enabled !== false);\n      const sortedData = filteredData.sort((a, b) => a.order - b.order);\n      setProjects(sortedData);\n      setLoading(false); // Stop loading once data is fetched\n    };\n\n    fetchProjects();\n  }, []);\n\n  return (\n    <div className=\"app-container\">\n      <header className=\"app-header\">\n        <HeaderContent /> {/* Inject the component */}\n    \n      </header>\n      <main className=\"app-main\">\n        <div className=\"project-grid\">\n          {projects.map((project, index) => (\n            <Card\n              key={project.id}\n              year={project.date}\n              tag={project.tag}\n              title={project.title}\n              description={project.description}\n              imageURL={project.imageURL}\n              caseStudyLink={`/case-study/${project.id}`}\n              learnMoreLink={`/learn-more/${project.id}`}\n              delay={300 * (1 - Math.exp(-index / 5))}\n              onClick={() => {console.log(\"clicked: \"+project);\n                setSelectedCard(project);}\n              }\n            />\n          ))}\n        </div>\n        {selectedCard && \n        <Page \n          project={selectedCard} \n          onClose={() => setSelectedCard(null)} // Close the page by setting selectedCard to null\n        />}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
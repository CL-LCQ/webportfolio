{"ast":null,"code":"import React,{useEffect,useState}from'react';import{supabaseClient}from'./supabaseClient';import Card from'./components/Card/Card';import HeaderContent from'./components/Header/Header';// Import the component\nimport'./App.css';import Page from'./components/Page/Page';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[projects,setProjects]=useState([]);const[loading,setLoading]=useState(true);// New state for loading\nconst[selectedCard,setSelectedCard]=useState(null);const[isBackgroundActive,setIsBackgroundActive]=useState(false);const toggleClass=()=>{setIsBackgroundActive(prevState=>!prevState);};// Fetch projects from Supabase\nuseEffect(()=>{const fetchProjects=async()=>{const{data,error}=await supabaseClient.from('work_v2').select('*');// .select('id, tag, title, description, imageURL, order, date');\nif(error){console.error('Error fetching projects:',error);setLoading(false);// Stop loading on error\nreturn;}// Filter and sort projects\nconst filteredData=data.filter(project=>project.enabled!==false);const sortedData=filteredData.sort((a,b)=>a.order-b.order);setProjects(sortedData);setLoading(false);// Stop loading once data is fetched\n};fetchProjects();},[]);// Apply the class to <body> or <html> whenever isBackgroundActive changes\nuseEffect(()=>{if(isBackgroundActive){document.body.classList.add('background');document.documentElement.classList.add('background');}else{document.body.classList.remove('background');document.documentElement.classList.remove('background');}},[isBackgroundActive]);// Run every time isBackgroundActive change\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"app-container\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"app-header\",children:[/*#__PURE__*/_jsx(HeaderContent,{}),\" \"]}),/*#__PURE__*/_jsxs(\"main\",{className:\"app-main\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"overlay \".concat(isBackgroundActive?'background':'')}),/*#__PURE__*/_jsx(\"div\",{className:\"project-grid\",children:projects.map((project,index)=>/*#__PURE__*/_jsx(Card,{project:project,delay:300*(1-Math.exp(-index/5)),onClick:()=>{console.log(\"clicked: \"+project.title);setSelectedCard(project);toggleClass();}}))}),selectedCard&&/*#__PURE__*/_jsx(\"div\",{className:\"page-container\",children:/*#__PURE__*/_jsx(Page,{project:selectedCard,onClose:()=>{setSelectedCard(null);toggleClass();}})})]})]});}export default App;","map":{"version":3,"names":["React","useEffect","useState","supabaseClient","Card","HeaderContent","Page","jsx","_jsx","jsxs","_jsxs","App","projects","setProjects","loading","setLoading","selectedCard","setSelectedCard","isBackgroundActive","setIsBackgroundActive","toggleClass","prevState","fetchProjects","data","error","from","select","console","filteredData","filter","project","enabled","sortedData","sort","a","b","order","document","body","classList","add","documentElement","remove","className","children","concat","map","index","delay","Math","exp","onClick","log","title","onClose"],"sources":["/Users/charlesleclercq/Documents/Github/portfolio-react/portfolio-react/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { supabaseClient } from './supabaseClient';\nimport Card from './components/Card/Card';\nimport HeaderContent from './components/Header/Header'; // Import the component\nimport './App.css';\nimport Page from './components/Page/Page';\n\nfunction App() {\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(true); // New state for loading\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [isBackgroundActive, setIsBackgroundActive] = useState(false);\n\n\n  const toggleClass = () => {\n    setIsBackgroundActive(prevState => !prevState);\n  };\n\n  // Fetch projects from Supabase\n  useEffect(() => {\n    const fetchProjects = async () => {\n      const { data, error } = await supabaseClient\n        .from('work_v2')\n        .select('*');\n        // .select('id, tag, title, description, imageURL, order, date');\n\n      if (error) {\n        console.error('Error fetching projects:', error);\n        setLoading(false); // Stop loading on error\n        return;\n      }\n\n      // Filter and sort projects\n      const filteredData = data.filter((project) => project.enabled !== false);\n      const sortedData = filteredData.sort((a, b) => a.order - b.order);\n      setProjects(sortedData);\n      setLoading(false); // Stop loading once data is fetched\n    };\n\n    fetchProjects();\n\n\n\n\n  }, []);\n\n   // Apply the class to <body> or <html> whenever isBackgroundActive changes\n   useEffect(() => {\n    if (isBackgroundActive) {\n      document.body.classList.add('background');\n      document.documentElement.classList.add('background');\n    } else {\n      document.body.classList.remove('background');\n      document.documentElement.classList.remove('background');\n    }\n  }, [isBackgroundActive]); // Run every time isBackgroundActive change\n\n  return (\n    <div className=\"app-container\">\n      <header className=\"app-header\">\n        <HeaderContent /> {/* Inject the component */}\n    \n      </header>\n      <main className=\"app-main\">\n             {/* This overlay will appear over everything except page-container */}\n             {/* {selectedCard && <div className=\"overlay\"></div>}  */}\n             <div className={`overlay ${isBackgroundActive ? 'background' : ''}`}></div>\n        <div className=\"project-grid\">\n          {projects.map((project, index) => (\n            <Card\n              project={project}\n              delay={300 * (1 - Math.exp(-index / 5))}\n              onClick={() => {\n                console.log(\"clicked: \"+project.title);\n                setSelectedCard(project);\n                toggleClass();\n              }\n              }\n            />\n          ))}\n        </div>\n        {/* Only render the page-container when a card is clicked */}\n        {selectedCard && (\n          <div className=\"page-container\">\n            <Page \n              project={selectedCard} \n              onClose={() => {\n                setSelectedCard(null);\n                toggleClass(); \n              }\n\n            }\n            />\n          </div>\n        )}\n        \n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}